require_relative '../node_modules/react-native/scripts/react_native_pods'
require_relative '../node_modules/@react-native-community/cli-platform-ios/native_modules'

platform :ios, '15.1'
use_frameworks!
$RNFirebaseAsStaticFramework = true
$FirebaseSDKVersion = '11.4.0'

target 'Cypherd' do
  config = use_native_modules!
  $RNFirebaseAnalyticsWithoutAdIdSupport = true
  use_react_native!(
    :path => config[:reactNativePath],
  )

  permissions_path = '../node_modules/react-native-permissions/ios'

  pod 'Permission-Camera', :path => "#{permissions_path}/Camera"

  pod 'RNVectorIcons', :path => '../node_modules/react-native-vector-icons'

  pod 'react-native-webview', :path => '../node_modules/react-native-webview'

  pod 'react-native-randombytes', :path => '../node_modules/react-native-randombytes'

  pod 'RNSentry', :path => '../node_modules/@sentry/react-native'

  pod 'react-native-camera', :path => '../node_modules/react-native-camera'

  pod 'RNPermissions', :path => '../node_modules/react-native-permissions'

  pod 'react-native-view-shot', :path => '../node_modules/react-native-view-shot'

  pod 'RNLocalize', :path => '../node_modules/react-native-localize'

  pod 'rn-fetch-blob', :path => '../node_modules/rn-fetch-blob'

  pod 'react-native-video', :path => '../node_modules/react-native-video'

  pod 'lottie-react-native', :path => '../node_modules/lottie-react-native'  

  pod 'FirebaseCore', '~> 11.4.0'
  pod 'FirebaseCrashlytics', '~> 11.4.0'
  pod 'FirebaseAnalytics', '~> 11.4.0'
  pod 'Firebase/Core', :modular_headers => true
  pod 'Firebase/Analytics', :modular_headers => true
  pod 'Firebase/Messaging', :modular_headers => true

  target 'CypherdTests' do
    inherit! :complete
    # Pods for testing
  end

  # Enables Flipper.
  #
  # Note that if you have use_frameworks! enabled, Flipper will not work and
  # you should disable the next line.
  # use_flipper!()

  pre_install do |installer|
    Pod::Installer::Xcode::TargetValidator.send(:define_method, :verify_no_static_framework_transitive_dependencies) {}
  
    installer.pod_targets.each do |pod|
      if pod.name.eql?('RNPermissions') || pod.name.start_with?('Permission-')
        def pod.build_type;
          Pod::BuildType.static_library
        end
      end
    end
  end
  

  post_install do |installer|
    react_native_post_install(installer, config[:reactNativePath],
    :mac_catalyst_enabled => false)

    installer.pods_project.targets.each do |target|
      target.build_configurations.each do |config|
        config.build_settings['ONLY_ACTIVE_ARCH'] = 'NO'
        config.build_settings['EXCLUDED_ARCHS[sdk=iphonesimulator*]'] = 'arm64'
        config.build_settings['IPHONEOS_DEPLOYMENT_TARGET'] = '15.0'
      end
    end

    # Modify RCT-Folly Portability.h to disable coroutines
    Dir.glob(installer.sandbox.root + "RCT-Folly/folly/Portability.h") do |file|
      begin
        # First try to make the file writable
        system "chmod +w #{file}"
        
        contents = File.read(file)
        modified_contents = contents.gsub(/#define FOLLY_HAS_COROUTINES 1/, '#define FOLLY_HAS_COROUTINES 0')
        
        # Try writing with elevated privileges if needed
        if !File.writable?(file)
          system "sudo chmod +w #{file}"
        end
        
        File.write(file, modified_contents)
        
        # Optionally restore original permissions
        system "chmod -w #{file}"
      rescue => e
        Pod::UI.warn "Failed to modify Portability.h: #{e.message}"
      end
    end
  end
end

